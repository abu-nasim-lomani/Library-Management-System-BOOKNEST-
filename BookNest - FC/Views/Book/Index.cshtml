@model IEnumerable<BookNest.Models.Book>
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

<div class="container mt-5">
    <h2 class="mb-4">Book List</h2>

    <!-- Search Field -->
    <div class="input-group mb-4">
        <input type="text" class="form-control" id="searchBox" placeholder="Search for books...">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="button" onclick="searchBooks()">Search</button>
        </div>
    </div>

    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th style="width: 30%;">Title</th>
                <th style="width: 25%;">Author</th>
                <th style="width: 15%;">Quantity</th>
                <th style="width: 30%;">Actions</th>
            </tr>
        </thead>
        <tbody id="bookList">
            @foreach (var book in Model)
            {
                <tr>
                    <td class="book-title">@book.Title</td>
                    <td class="book-author">@book.Author</td>
                    <td>@book.Quantity</td>
                    <td>
                        @if (ViewBag.IsAdmin)

                        {
                            <!-- অ্যাডমিনের জন্য আপডেট এবং ডিলিট অপশন -->
                            <button type="button" class="btn btn-primary" onclick="confirmUpdate('@book.Id', '@book.Title', '@book.Author', '@book.Quantity')">Update</button>
                            <button type="button" class="btn btn-danger" onclick="confirmDelete(@book.Id)">Delete</button>
                            <button type="button" class="btn btn-primary mb-2" onclick="openIssueModal(@book.Id, '@book.Title')">Issue Book</button>
                        }

                        else

                        {
                            <!-- সাধারণ ব্যবহারকারীদের জন্য বই ইস্যু বা স্টক আউট চেক -->
                            @if (book.Quantity > 0)
                            {
                                <button type="button" class="btn btn-primary mb-2" onclick="openRequestModal(@book.Id, '@book.Title')">Request Issue</button>
                            }
                            else
                            {
                                <button class="btn btn-secondary" disabled>Out of Stock</button>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

<!-- Request Issue Modal -->
<div class="modal fade" id="requestModal" tabindex="-1" role="dialog" aria-labelledby="requestModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="requestModalLabel">Request Book Issue</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="requestForm">
                    <input type="hidden" id="bookId" name="bookId">
                    <div class="form-group">
                        <label for="bookTitle">Book Title</label>
                        <input type="text" class="form-control" id="bookTitle" name="bookTitle" readonly>
                    </div>
                    <div class="form-group">
                        <label for="returnDate">Return Date</label>
                        <input type="date" class="form-control" id="returnDate" name="returnDate" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitRequest()">Submit</button>
            </div>
        </div>
    </div>
</div>

<!-- Issue Book Modal -->
<div class="modal fade" id="issueModal" tabindex="-1" role="dialog" aria-labelledby="issueModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="issueModalLabel">Issue Book</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="issueForm">
                    <input type="hidden" id="issueBookId" name="bookId">
                    <div class="form-group">
                        <label for="issueBookTitle">Book Title</label>
                        <input type="text" class="form-control" id="issueBookTitle" name="bookTitle" readonly>
                    </div>
                    <div class="form-group">
                        <label for="issueReturnDate">Return Date</label>
                        <input type="date" class="form-control" id="issueReturnDate" name="returnDate" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitIssue()">Issue</button>
            </div>
        </div>
    </div>
</div>
<!-- Update Confirmation Modal -->
<div class="modal fade" id="updateConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="updateConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateConfirmationModalLabel">Update Book</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="updateForm" asp-action="UpdateBook" method="post">
                    <input type="hidden" name="Id" id="updateBookId" />
                    <div class="form-group">
                        <label for="updateTitle">Title</label>
                        <input type="text" class="form-control" name="Title" id="updateTitle" required />
                    </div>
                    <div class="form-group">
                        <label for="updateAuthor">Author</label>
                        <input type="text" class="form-control" name="Author" id="updateAuthor" required />
                    </div>
                    <div class="form-group">
                        <label for="updateQuantity">Quantity</label>
                        <input type="number" class="form-control" name="Quantity" id="updateQuantity" required min="1" />
                    </div>
                    <button type="submit" class="btn btn-primary">Update</button>
                </form>
            </div>
        </div>
    </div>
</div>



<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Delete Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this book?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <form id="deleteForm" asp-action="DeleteBook" method="post" style="display:inline;">
                    <input type="hidden" name="bookId" id="deleteBookId" />
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script type="text/javascript">
        function confirmUpdate(bookId, title, author, quantity) {
            $('#updateBookId').val(bookId);
            $('#updateTitle').val(title);
            $('#updateAuthor').val(author);
            $('#updateQuantity').val(quantity);
            $('#updateConfirmationModal').modal('show');
        }

        function confirmDelete(bookId) {
            $('#deleteBookId').val(bookId);
            $('#deleteConfirmationModal').modal('show');
        }

        function openRequestModal(bookId, bookTitle) {
            $('#bookId').val(bookId);
            $('#bookTitle').val(bookTitle);
            $('#requestModal').modal('show');
        }

        function openIssueModal(bookId, bookTitle) {
            $('#issueBookId').val(bookId);
            $('#issueBookTitle').val(bookTitle);
            $('#issueModal').modal('show');
        }

        function submitRequest() {
            var returnDate = $('#returnDate').val();
            if (!returnDate) {
                alert("Please select a valid return date.");
                return;
            }

            $.ajax({
                url: '@Url.Action("RequestIssue", "Book")',
                type: 'POST',
                data: $('#requestForm').serialize(),
                success: function (response) {
                    if (response == "Book already issued") {
                        alert("You need to return your previous book before issuing a new one.");
                    } else {
                        alert("Your request has been submitted for review.");
                        $('#requestModal').modal('hide');
                    }
                },
                error: function (response) {
                    alert("An error occurred: " + response.statusText);
                }
            });
        }

        function submitIssue() {
            var returnDate = $('#issueReturnDate').val();
            if (!returnDate) {
                alert("Please select a valid return date.");
                return;
            }

            $.ajax({
                url: '@Url.Action("AdminIssueBook", "Book")',
                type: 'POST',
                data: $('#issueForm').serialize(),
                success: function (response) {
                    alert("Book issued successfully.");
                    $('#issueModal').modal('hide');
                },
                error: function (response) {
                    alert("An error occurred: " + response.statusText);
                }
            });
        }

        function searchBooks() {
            var value = $("#searchBox").val().toLowerCase();
            $("#bookList tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        }

        $(document).ready(function () {
            $("#searchBox").on("keyup", function () {
                searchBooks();
            });
        });
    </script>


    <style>
        .request-form {
            display: block;
        }

        .book-row:hover {
            background-color: #f5f5f5;
        }

        /* Fixed column widths */
        .table th, .table td {
            white-space: nowrap;
        }

            .table th:nth-child(1),
            .table td:nth-child(1) {
                width: 30%;
            }

            .table th:nth-child(2),
            .table td:nth-child(2) {
                width: 25%;
            }

            .table th:nth-child(3),
            .table td:nth-child(3) {
                width: 15%;
            }

            .table th:nth-child(4),
            .table td:nth-child(4) {
                width: 30%;
            }
    </style>
}
